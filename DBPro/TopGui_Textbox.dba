
function guiTextbox(id as guiId, x, y, w, h, text$, callbackPtr)
    guiBeginControl(x, y, w, h, 1)
    
    text$ = guiTextboxLogic(id, w, h, text$, text$, callbackPtr)
    guiTextboxDraw(id, w, h, text$)
    
    guiEndControl()
endfunction text$

function guiPassbox(id as guiId, x, y, w, h, text$, passchar$, callbackPtr)
    guiBeginControl(x, y, w, h, 1)
    
    l = fast len(text$)
    displaytext$ = ""
    for i = 1 to l
        displaytext$ = displaytext$ + passchar$
    next i
    
    text$ = guiTextboxLogic(id, w, h, text$, displaytext$, callbackPtr)
    guiTextboxDraw(id, w, h, displaytext$)
    
    guiEndControl()
endfunction text$

function guiTextboxValidate(text$, newtext$, newSelStart, newSelEnd, callbackPtr)
    if callbackPtr
        valid = call function ptr(callbackPtr, newtext$)
    else
        valid = 1
    endif
    
    if valid
        gui.selStart = newSelStart
        gui.selEnd = newSelEnd
        text$ = newtext$
    endif
endfunction text$

function guiTextboxLogic(id as guiId, w, h, text$, displaytext$, callbackPtr)

    focused = guiFocus(id, 1)
    
    ` Convert 0, 0 to screen coordinates
    x = guiAdjustX(0)
    y = guiAdjustY(0)

    ` If mouse over, try becoming hot
    if guiInClip(guiMouseX(), guiMouseY())
        guiSetHot(id)
    endif
    
    if guiGetHot() = id
        if gui.msd = 1
            if guiSetActive(id)
                sel = guiGetCursorPos(displaytext$, guiMouseX()+gui.tempScroll-x-4, 1)
                guiSetFocus(id, sel, sel)
            endif
        endif
    endif
    
    if guiGetActive() = id
        if gui.msc = 1
            guiStayActive()
            
            gui.selEnd = guiGetCursorPos(displaytext$, guiMouseX()+gui.tempScroll-x-4, 1)
            guiSetCursorVisible(1)
        endif
    endif
    
    if focused
        if gui.selEnd = -1 then gui.selEnd = 2147483647
    
        l = fast len(gui.entryBuffer)
        while l
            mode = mid ascii(gui.entryBuffer, 1)
            keyCode = mid ascii(gui.entryBuffer, 2)
            char$ = chr$(keyCode)
            minSel = min(gui.selStart, gui.selEnd)
            maxSel = max(gui.selStart, gui.selEnd)
            
            if mode = 1
                if keyCode = 8
                    if minSel <> maxSel
                        newtext$ = replace$(text$, minSel+1, maxSel-minSel, "")
                        text$ = guiTextboxValidate(text$, newtext$, minSel, minSel, callbackPtr)
                    else
                        if minSel > 0
                            newtext$ = replace$(text$, minSel, 1, "")
                            text$ = guiTextboxValidate(text$, newtext$, minSel-1, minSel-1, callbackPtr)
                        endif
                    endif
                else
                    if keyCode <> 9 and keyCode <> 10 and keyCode <> 13
                        newtext$ = replace$(text$, minSel+1, maxSel-minSel, char$)
                        text$ = guiTextboxValidate(text$, newtext$, minSel+1, minSel+1, callbackPtr)
                    endif
                endif
            else
                if mode = 2 or mode = 3
                    if keyCode = VK_LEFT
                        dec gui.selEnd
                        if shiftkey() = 0 then gui.selStart = gui.selEnd
                    endif
                    if keyCode = VK_RIGHT
                        inc gui.selEnd
                        if shiftkey() = 0 then gui.selStart = gui.selEnd
                    endif
                    if keyCode = VK_DELETE
                        if minSel <> maxSel
                            newtext$ = replace$(text$, minSel+1, maxSel-minSel, "")
                            text$ = guiTextboxValidate(text$, newtext$, minSel, minSel, callbackPtr)
                        else
                            newtext$ = replace$(text$, minSel+1, 1, "")
                            text$ = guiTextboxValidate(text$, newtext$, minSel, minSel, callbackPtr)
                        endif
                    endif
                endif
            endif
            
            gui.selStart = clamp(gui.selStart, 0, fast len(text$))
            gui.selEnd = clamp(gui.selEnd, 0, fast len(text$))
            
            gui.entryBuffer = remove$(gui.entryBuffer, 1, 2)
            dec l, 2
            
            guiSetCursorVisible(1)
        endwhile
        
        gui.selStart = clamp(gui.selStart, 0, fast len(text$))
        gui.selEnd = clamp(gui.selEnd, 0, fast len(text$))
        
        selEndX = guiGetTextWidth(fast left$(displaytext$, gui.selEnd))+4-gui.tempScroll
        if selEndX < 4
            dec gui.tempScroll, 10
        endif
        if selEndX > w-4
            inc gui.tempScroll, 10
        endif
        if gui.tempScroll < 0 then gui.tempScroll = 0
    endif
    
endfunction text$

function guiTextboxDraw(id as guiId, w, h, text$)
    x = guiAdjustX(0)
    y = guiAdjustY(0)
    
    focused = guiGetFocus() = id
    if focused
        scroll = gui.tempScroll
    else
        scroll = 0
    endif
    
    a2FillBox x, y, x+w-1, y+h-1, THEME_BACKGROUND_LIGHTER
    
    if focused
        selStartX = guiGetTextWidth(fast left$(text$, gui.selStart))+x+4-scroll
        selEndX = guiGetTextWidth(fast left$(text$, gui.selEnd))+x+4-scroll
        a2FillBox min(selStartX, selEndX), y+2, max(selStartX, selEndX), y+h-2, THEME_SELECTION_COLOR
        if guiGetCursorVisible() then a2Line selEndX, y+2, selEndX, y+h-3, THEME_CURSOR_COLOR
        
        ` When editing don't cache text
        a2BoxText gui.fontId, x+4-scroll, y+4, x+w-2, y+h-2, text$, 0, 1, 0, THEME_TEXT_DARK
    else
        guiFastBoxText(gui.fontId, x+4-scroll, y+4, x+w-2, y+h-2, text$, 0, 1, 0, THEME_TEXT_DARK)
    endif
    
    a2SetLineAA 0
    a2Box x, y, x+w-1, y+h-1, THEME_OUTLINE_DARK
    a2SetLineAA 1
    
endfunction

