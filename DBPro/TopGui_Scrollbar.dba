
function guiHScrollbar(id as guiId, x, y, w, h, value, maxValue, pageSize, smallStep)
    guiLayout(id, x, y, w, h)
    
    guiBeginControl(x, y, w, h, 1)
    
    value = guiHScrollbarLogic(id, w, h, value, maxValue, pageSize, smallStep)
    guiHScrollbarDraw(id, w, h, value, maxValue, pageSize)
    
    guiEndControl()
endfunction value

function guiVScrollbar(id as guiId, x, y, w, h, value, maxValue, pageSize, smallStep)
    guiLayout(id, x, y, w, h)
    
    guiBeginControl(x, y, w, h, 1)
    
    value = guiVScrollbarLogic(id, w, h, value, maxValue, pageSize, smallStep)
    guiVScrollbarDraw(id, w, h, value, maxValue, pageSize)
    
    guiEndControl()
endfunction value

function guiHScrollbarLogic(id as guiId, w, h, value, maxValue, pageSize, smallStep)
    x = guiAdjustX(0)
    y = guiAdjustY(0)
    
    ` If mouse over, try becoming hot
    if guiInClip(guiMouseX(), guiMouseY())
        guiSetHot(id)
    endif
    
    ` If disabled
    if maxValue <= 0
        exitfunction 0
    endif
    
    inc value, guiGetScroll(id, id)*smallStep
    
    slideSize = (w-h*2)
    barSize = max((pageSize*slideSize)/(maxValue+pageSize), 10)
    barPos = ((slideSize-barSize)*value)/maxValue
    
    inButton1 = guiInRect(guiMouseX(), guiMouseY(), x, y, x+h, y+h)
    inButton2 = guiInRect(guiMouseX(), guiMouseY(), x+w-h, y, x+w, y+h)
    inBar = guiInRect(guiMouseX(), guiMouseY(), x+h+barPos, y, x+h+barPos+barSize, y+h)
    inSlider = (inButton1 = 0) and (inButton2 = 0) and (inBar = 0)
    inSlider1 = inSlider and (guiMouseX() <= x+h+barPos)
    inSlider2 = inSlider and (guiMouseX() > x+h+barPos)
    
    if gui.msd = 1
        if guiGetHot() = id
            
            if guiSetActive(id)
                if inBar
                    gui.dragMode = 1
                    gui.dragX = barPos - guiMouseX()
                else
                    guiSetDelay(id, 500)
                    
                    gui.dragMode = 0
                    if inButton1 then gui.dragMode = 2 : dec value, smallStep
                    if inButton2 then gui.dragMode = 3 : inc value, smallStep
                    if inSlider1 then gui.dragMode = 4 : dec value, pageSize
                    if inSlider2 then gui.dragMode = 5 : inc value, pageSize
                endif
            endif
        endif
    endif
    
    if guiGetActive() = id
        if gui.msc = 1
            guiStayActive()
            
            select gui.dragMode
                case 1
                    barPos = gui.dragX + guiMouseX()
                    value = (barPos*maxValue)/(slideSize-barSize)
                endcase
                case 2
                    if inButton1
                        if guiHasDelayed() then guiSetDelay(id, 50) : dec value, smallStep
                    endif
                endcase
                case 3
                    if inButton2
                        if guiHasDelayed() then guiSetDelay(id, 50) : inc value, smallStep
                    endif
                endcase
                case 4
                    if inSlider1
                        if guiHasDelayed() then guiSetDelay(id, 50) : dec value, pageSize
                    endif
                endcase
                case 5
                    if inSlider2
                        if guiHasDelayed() then guiSetDelay(id, 50) : inc value, pageSize
                    endif
                endcase
            endselect
        endif
    endif
    
    value = clamp(value, 0, maxValue)
    
endfunction value

function guiVScrollbarLogic(id as guiId, w, h, value, maxValue, pageSize, smallStep)
    x = guiAdjustX(0)
    y = guiAdjustY(0)

    ` If mouse over, try becoming hot
    if guiInClip(guiMouseX(), guiMouseY())
        guiSetHot(id)
    endif
    
    ` If disabled
    if maxValue <= 0
        exitfunction 0
    endif

    inc value, guiGetScroll(id, id)*smallStep
    
    slideSize = (h-w*2)
    barSize = max((pageSize*slideSize)/(maxValue+pageSize), 10)
    barPos = ((slideSize-barSize)*value)/maxValue
    
    inButton1 = guiInRect(guiMouseX(), guiMouseY(), x, y, x+w, y+w)
    inButton2 = guiInRect(guiMouseX(), guiMouseY(), x, y+h-w, x+w, y+h)
    inBar = guiInRect(guiMouseX(), guiMouseY(), x, y+w+barPos, x+w, y+w+barPos+barSize)
    inSlider = (inButton1 = 0) and (inButton2 = 0) and (inBar = 0)
    inSlider1 = inSlider and (guiMouseY() <= y+w+barPos)
    inSlider2 = inSlider and (guiMouseY() > y+w+barPos)
    
    if gui.msd = 1
        if guiGetHot() = id
            
            if guiSetActive(id)
                if inBar
                    gui.dragMode = 1
                    gui.dragY = barPos - guiMouseY()
                else
                    guiSetDelay(id, 500)
                    
                    gui.dragMode = 0
                    if inButton1 then gui.dragMode = 2 : dec value, smallStep
                    if inButton2 then gui.dragMode = 3 : inc value, smallStep
                    if inSlider1 then gui.dragMode = 4 : dec value, pageSize
                    if inSlider2 then gui.dragMode = 5 : inc value, pageSize
                endif
            endif
        endif
    endif
    
    if guiGetActive() = id
        if gui.msc = 1
            guiStayActive()
            
            select gui.dragMode
                case 1
                    barPos = gui.dragY + guiMouseY()
                    value = (barPos*maxValue)/(slideSize-barSize)
                endcase
                case 2
                    if inButton1
                        if guiHasDelayed() then guiSetDelay(id, 50) : dec value, smallStep
                    endif
                endcase
                case 3
                    if inButton2
                        if guiHasDelayed() then guiSetDelay(id, 50) : inc value, smallStep
                    endif
                endcase
                case 4
                    if inSlider1
                        if guiHasDelayed() then guiSetDelay(id, 50) : dec value, pageSize
                    endif
                endcase
                case 5
                    if inSlider2
                        if guiHasDelayed() then guiSetDelay(id, 50) : inc value, pageSize
                    endif
                endcase
            endselect
        endif
    endif
    
    value = clamp(value, 0, maxValue)
    
endfunction value

function guiHScrollbarDraw(id as guiId, w, h, value, maxValue, pageSize)
    x = guiAdjustX(0)
    y = guiAdjustY(0)
    
    disabled = maxValue <= 0
    
    a2FillBox x, y, x+w, y+h, THEME_INACTIVE_DARK, THEME_INACTIVE_DARK, THEME_INACTIVE_LIGHT, THEME_INACTIVE_LIGHT
    
    if disabled = 0
        slideSize = (w-h*2)
        barSize = max((pageSize*slideSize)/(maxValue+pageSize), 10)
        barPos = ((slideSize-barSize)*value)/maxValue
        
        if guiGetHot() = id
            a2FillBox x, y, x+h, y+h, THEME_ACTIVE_LIGHT, THEME_ACTIVE_LIGHT, THEME_ACTIVE_DARK, THEME_ACTIVE_DARK
            a2FillBox x+w-h, y, x+w, y+h, THEME_ACTIVE_LIGHT, THEME_ACTIVE_LIGHT, THEME_ACTIVE_DARK, THEME_ACTIVE_DARK
            
            a2FillBox x+h+barPos, y, x+h+barPos+barSize, y+h, THEME_ACTIVE_LIGHT, THEME_ACTIVE_LIGHT, THEME_ACTIVE_DARK, THEME_ACTIVE_DARK
        else
            a2FillBox x, y, x+h, y+h, THEME_INACTIVE_LIGHT, THEME_INACTIVE_LIGHT, THEME_INACTIVE_DARK, THEME_INACTIVE_DARK
            a2FillBox x+w-h, y, x+w, y+h, THEME_INACTIVE_LIGHT, THEME_INACTIVE_LIGHT, THEME_INACTIVE_DARK, THEME_INACTIVE_DARK
            
            a2FillBox x+h+barPos, y, x+h+barPos+barSize, y+h, THEME_INACTIVE_LIGHT, THEME_INACTIVE_LIGHT, THEME_INACTIVE_DARK, THEME_INACTIVE_DARK
        endif
        
        a2FillTriangle x+7, y+h/2, x+h-9, y+5, x+h-9, y+h-6, THEME_ARROW_COLOR
        a2FillTriangle x+w-8, y+h/2, x+w+8-h, y+5, x+w+8-h, y+h-6, THEME_ARROW_COLOR
        a2Triangle x+7, y+h/2, x+h-9, y+5, x+h-9, y+h-6, THEME_ARROW_COLOR
        a2Triangle x+w-8, y+h/2, x+w+8-h, y+5, x+w+8-h, y+h-6, THEME_ARROW_COLOR
        
        a2SetLineAA 0
        a2Box x, y, x+h-1, y+h-1, THEME_OUTLINE_DARK
        a2Box x+w-h, y, x+w-1, y+h-1, THEME_OUTLINE_DARK
        
        a2Box x+h+barPos, y, x+h+barPos+barSize-1, y+h-1, THEME_OUTLINE_DARK
        a2SetLineAA 1
    else
        a2FillTriangle x+7, y+h/2, x+h-9, y+5, x+h-9, y+h-6, guiFadeColor(THEME_ARROW_COLOR, 0x40)
        a2FillTriangle x+w-8, y+h/2, x+w+8-h, y+5, x+w+8-h, y+h-6, guiFadeColor(THEME_ARROW_COLOR, 0x40)
        a2Triangle x+7, y+h/2, x+h-9, y+5, x+h-9, y+h-6, guiFadeColor(THEME_ARROW_COLOR, 0x40)
        a2Triangle x+w-8, y+h/2, x+w+8-h, y+5, x+w+8-h, y+h-6, guiFadeColor(THEME_ARROW_COLOR, 0x40)
        
        a2SetLineAA 0
        a2Box x, y, x+h-1, y+h-1, guiFadeColor(THEME_OUTLINE_DARK, 0x40)
        a2Box x+w-h, y, x+w-1, y+h-1, guiFadeColor(THEME_OUTLINE_DARK, 0x40)
        a2SetLineAA 1
    endif
    
    
endfunction

function guiVScrollbarDraw(id as guiId, w, h, value, maxValue, pageSize)
    x = guiAdjustX(0)
    y = guiAdjustY(0)
    
    disabled = maxValue <= 0
    
    a2FillBox x, y, x+w, y+h, THEME_INACTIVE_DARK, THEME_INACTIVE_LIGHT, THEME_INACTIVE_LIGHT, THEME_INACTIVE_DARK
    
    if disabled = 0
        slideSize = (h-w*2)
        barSize = max((pageSize*slideSize)/(maxValue+pageSize), 10)
        barPos = ((slideSize-barSize)*value)/maxValue
        
        if guiGetHot() = id
            a2FillBox x, y, x+w, y+w, THEME_ACTIVE_LIGHT, THEME_ACTIVE_DARK, THEME_ACTIVE_DARK, THEME_ACTIVE_LIGHT
            a2FillBox x, y+h-w, x+w, y+h, THEME_ACTIVE_LIGHT, THEME_ACTIVE_DARK, THEME_ACTIVE_DARK, THEME_ACTIVE_LIGHT
            
            a2FillBox x, y+w+barPos, x+w, y+w+barPos+barSize, THEME_ACTIVE_LIGHT, THEME_ACTIVE_DARK, THEME_ACTIVE_DARK, THEME_ACTIVE_LIGHT
        else
            a2FillBox x, y, x+w, y+w, THEME_INACTIVE_LIGHT, THEME_INACTIVE_DARK, THEME_INACTIVE_DARK, THEME_INACTIVE_LIGHT
            a2FillBox x, y+h-w, x+w, y+h, THEME_INACTIVE_LIGHT, THEME_INACTIVE_DARK, THEME_INACTIVE_DARK, THEME_INACTIVE_LIGHT
            
            a2FillBox x, y+w+barPos, x+w, y+w+barPos+barSize, THEME_INACTIVE_LIGHT, THEME_INACTIVE_DARK, THEME_INACTIVE_DARK, THEME_INACTIVE_LIGHT
        endif
        
        a2FillTriangle x+w/2, y+7, x+5, y+w-9, x+w-6, y+w-9, THEME_ARROW_COLOR
        a2FillTriangle x+w/2, y+h-8, x+5, y+h+8-w, x+w-6, y+h+8-w, THEME_ARROW_COLOR
        a2Triangle x+w/2, y+7, x+5, y+w-9, x+w-6, y+w-9, THEME_ARROW_COLOR
        a2Triangle x+w/2, y+h-8, x+5, y+h+8-w, x+w-6, y+h+8-w, THEME_ARROW_COLOR
        
        a2SetLineAA 0
        a2Box x, y, x+w-1, y+w-1, THEME_OUTLINE_DARK
        a2Box x, y+h-w, x+w-1, y+h-1, THEME_OUTLINE_DARK
        
        a2Box x, y+w+barPos, x+w-1, y+w+barPos+barSize-1, THEME_OUTLINE_DARK
        a2SetLineAA 1
    else
        a2FillTriangle x+w/2, y+7, x+5, y+w-9, x+w-6, y+w-9, guiFadeColor(THEME_ARROW_COLOR, 0x40)
        a2FillTriangle x+w/2, y+h-8, x+5, y+h+8-w, x+w-6, y+h+8-w, guiFadeColor(THEME_ARROW_COLOR, 0x40)
        a2Triangle x+w/2, y+7, x+5, y+w-9, x+w-6, y+w-9, guiFadeColor(THEME_ARROW_COLOR, 0x40)
        a2Triangle x+w/2, y+h-8, x+5, y+h+8-w, x+w-6, y+h+8-w, guiFadeColor(THEME_ARROW_COLOR, 0x40)
        
        a2SetLineAA 0
        a2Box x, y, x+w-1, y+w-1, guiFadeColor(THEME_OUTLINE_DARK, 0x40)
        a2Box x, y+h-w, x+w-1, y+h-1, guiFadeColor(THEME_OUTLINE_DARK, 0x40)
        a2SetLineAA 1
    endif

endfunction
