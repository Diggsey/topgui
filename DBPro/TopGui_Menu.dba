
function guiMenuBegin(id as guiId, x, y, w, h)
    guiBeginControl(x, y, w, h, 1)
    
    guiMenuLogic(id)
    guiMenuDraw(w, h)
    
    guiPushInteger(0)
    guiPushInteger(id)
    guiPushInteger(w)
    guiPushInteger(h)
    guiPushInteger(0)
endfunction

function guiMenuEnd()
    itemx = guiPopInteger()
    h = guiPopInteger()
    w = guiPopInteger()
    id = guiPopInteger()
    guiPopInteger()

    guiEndControl()
endfunction

function guiMenuLogic(id as guiId)
    ` If mouse over, try becoming hot
    if guiInClip(guiMouseX(), guiMouseY())
        guiSetHot(id)
    endif
endfunction

function guiMenuDraw(w, h)
    x = guiAdjustX(0)
    y = guiAdjustY(0)
    
    a2FillBox x, y, x+w, y+h, THEME_BACKGROUND_MENU
endfunction

function guiContextMenuBegin(id as guiId, x, y, w, h, opened)
    if opened
        guiMenuOpen(id, 0)
    endif
    
    open = guiMenuStackIndex(id) <> -1
    if open then guiDropDownMenuBegin(id, x, y, w, h)
endfunction open

function guiContextMenuEnd()
    guiDropDownMenuEnd()
endfunction

function guiDropDownMenuBegin(id as guiId, x, y, w, h)
    guiBeginOverlay(id, x, y, w, h, 0xFFFFFFFF, 1, 200, 5)
    
    guiDropDownMenuBeginDraw(id, w, h)
    
    guiBeginContainer(id, 1, 1, w-2, h-2, 0, 0)
    
    guiPushInteger(1)
    guiPushInteger(id)
    guiPushInteger(w)
    guiPushInteger(h)
    guiPushInteger(0)
endfunction

function guiDropDownMenuBeginDraw(id as guiId, w, h)
    x = guiAdjustX(0)
    y = guiAdjustY(0)

    a2FillBox x, y, x+w, y+h, THEME_BACKGROUND_MENU
endfunction

function guiMenuItem(caption$, halign, height, indent, icon)
    itemy = guiPopInteger()
    h = guiPopInteger()
    w = guiPopInteger()
    id = guiPopInteger()
    
    x = guiAdjustX(0)
    y = guiAdjustY(0)
    
    hot = guiInRect(guiMouseX(), guiMouseY(), x, y+itemy, x+w-2, y+itemy+height) and (guiGetHot() = id)
    clicked = guiMenuItemLogic(hot)
    guiMenuItemDraw(caption$, halign, 0, itemy, w-2, height, indent, icon, hot)
    
    if clicked then guiMenuClose(0)
    if hot then guiMenuCloseChildren(id)
    
    guiPushInteger(id)
    guiPushInteger(w)
    guiPushInteger(h)
    guiPushInteger(itemy+height)
endfunction clicked

function guiCheckboxMenuItem(caption$, halign, height, indent, checked)
    itemy = guiPopInteger()
    h = guiPopInteger()
    w = guiPopInteger()
    id = guiPopInteger()
    
    x = guiAdjustX(0)
    y = guiAdjustY(0)
    
    hot = guiInRect(guiMouseX(), guiMouseY(), x, y+itemy, x+w-2, y+itemy+height) and (guiGetHot() = id)
    clicked = guiMenuItemLogic(hot)
    guiCheckboxMenuItemDraw(caption$, halign, 0, itemy, w-2, height, indent, checked, hot)
    
    if clicked
        guiMenuClose(0)
        checked = 1-checked
    endif
    if hot then guiMenuCloseChildren(id)
    
    guiPushInteger(id)
    guiPushInteger(w)
    guiPushInteger(h)
    guiPushInteger(itemy+height)
endfunction checked

function guiCheckboxMenuItemDraw(caption$, halign, itemx, itemy, clientw, height, indent, checked, hot)
    x = guiAdjustX(0)
    y = guiAdjustY(0)

    guiMenuItemDraw(caption$, halign, itemx, itemy, clientw, height, indent, 0, hot)
    
    if checked
        guiDrawTick(x+itemx+3, y+itemy+height/2-10)
    endif
endfunction

function guiRadioButtonMenuItem(caption$, halign, height, indent, index, checkedIndex)
    itemy = guiPopInteger()
    h = guiPopInteger()
    w = guiPopInteger()
    id = guiPopInteger()
    
    x = guiAdjustX(0)
    y = guiAdjustY(0)
    
    hot = guiInRect(guiMouseX(), guiMouseY(), x, y+itemy, x+w-2, y+itemy+height) and (guiGetHot() = id)
    clicked = guiMenuItemLogic(hot)
    guiRadioButtonMenuItemDraw(caption$, halign, 0, itemy, w-2, height, indent, index, checkedIndex, hot)
    
    if clicked
        guiMenuClose(0)
        checkedIndex = index
    endif
    if hot then guiMenuCloseChildren(id)
    
    guiPushInteger(id)
    guiPushInteger(w)
    guiPushInteger(h)
    guiPushInteger(itemy+height)
endfunction checkedIndex

function guiRadioButtonMenuItemDraw(caption$, halign, itemx, itemy, clientw, height, indent, index, checkedIndex, hot)
    x = guiAdjustX(0)
    y = guiAdjustY(0)

    guiMenuItemDraw(caption$, halign, itemx, itemy, clientw, height, indent, 0, hot)
    
    if index = checkedIndex
        a2FillCircle x+itemx+13, y+itemy+height/2, 5, THEME_RADIO_COLOR
        a2Circle x+itemx+13, y+itemy+height/2, 5, THEME_RADIO_COLOR
    endif
endfunction

function guiSplitterMenuItem(height)
    itemy = guiPopInteger()
    h = guiPopInteger()
    w = guiPopInteger()
    id = guiPopInteger()
    
    guiSplitterMenuItemDraw(itemy, w-2, height)
    
    guiPushInteger(id)
    guiPushInteger(w)
    guiPushInteger(h)
    guiPushInteger(itemy+height)
endfunction

function guiSplitterMenuItemDraw(itemy, clientw, height)
    a2SetLineAA 0
    a2Line 5, itemy+height/2+1, clientw-5, itemy+height/2+1, THEME_SPLITTER_COLOR
    a2SetLineAA 1
endfunction

function guiDropDownMenuItemBegin(id as guiId, caption$, height, indent, icon, menuw, menuh)
    itemoffset = guiPopInteger()
    h = guiPopInteger()
    w = guiPopInteger()
    parentId = guiPopInteger()
    direction = guiPeekInteger()
    
    x = guiAdjustX(0)
    y = guiAdjustY(0)
    
    itemx = 0
    itemy = 0
    if direction
        itemy = itemoffset
        itemw = w-2
        halign = 0
        inc itemoffset, height
    else
        itemx = itemoffset
        itemw = a2GetTextWidth(gui.fontId, caption$)+20
        halign = 1
        inc itemoffset, itemw
    endif
    
    hot = guiInRect(guiMouseX(), guiMouseY(), x+itemx, y+itemy, x+itemx+itemw, y+itemy+height) and (guiGetHot() = parentId)
    clicked = guiMenuItemLogic(hot)
    
    if clicked
        if guiMenuStackIndex(parentId) <> -1 and direction = 0
            guiMenuClose(parentId)
        else
            if direction = 0 then guiMenuOpen(parentId, 0)
            guiMenuOpen(id, parentId)
        endif
    else
        if hot
            if direction
                guiMenuOpen(id, parentId)
            else
                if guiMenuStackIndex(parentId) <> -1
                    guiMenuOpen(id, parentId)
                endif
            endif
        endif
    endif
    open = guiMenuStackIndex(id) <> -1
    
    guiMenuItemDraw(caption$, halign, itemx, itemy, itemw, height, indent, icon, open or hot)
    if direction then guiDropDownMenuItemDraw(itemy, height, menuw)
    
    guiPushInteger(parentId)
    guiPushInteger(w)
    guiPushInteger(h)
    guiPushInteger(itemoffset)
    
    if open
        if direction
            guiDropDownMenuBegin(id, guiOverlayX()+x+w-5, guiOverlayY()+y+itemy-3, menuw, menuh)
        else
            guiDropDownMenuBegin(id, x+itemx, y+height, menuw, menuh)
        endif
    endif
endfunction open

function guiDropDownMenuItemDraw(itemy, height, menuw)
    x = guiAdjustX(0)
    y = guiAdjustY(0)
    
    a2FillTriangle x+menuw-8, y+itemy+height/2, x+menuw-12, y+itemy+height/2-4, x+menuw-12, y+itemy+height/2+4, THEME_ARROW_COLOR
    a2Triangle x+menuw-8, y+itemy+height/2, x+menuw-12, y+itemy+height/2-4, x+menuw-12, y+itemy+height/2+4, THEME_ARROW_COLOR
endfunction

function guiDropDownMenuItemEnd()
    guiDropDownMenuEnd()
endfunction

function guiMenuItemLogic(hot)
    clicked = hot and (gui.msu = 1)
endfunction clicked

function guiMenuItemDraw(caption$, halign, itemx, itemy, clientw, height, indent, icon, hot)
    x = guiAdjustX(0)
    y = guiAdjustY(0)
    
    if hot
        a2FillBox x+itemx, y+itemy, x+itemx+clientw, y+itemy+height, THEME_ACTIVE_LIGHT, THEME_ACTIVE_LIGHT, THEME_ACTIVE_DARK, THEME_ACTIVE_DARK
    endif

    guiFastBoxText(gui.fontId, x+itemx+indent+5, y+itemy, x+itemx+clientw-indent-5, y+itemy+height, caption$, halign, 1, 0, THEME_TEXT_DARK)
    
    if icon
        a2DrawImage icon, x+itemx+3, y+itemy+height/2, 0, 0, image height(icon)/2, 1, 0, 0xFFFFFFFF
    endif
endfunction

function guiDropDownMenuEnd()
    itemy = guiPopInteger()
    h = guiPopInteger()
    w = guiPopInteger()
    id = guiPopInteger()
    guiPopInteger()

    guiEndContainer()
    
    guiDropDownMenuEndDraw(id, w, h)

    guiEndOverlay()
endfunction

function guiDropDownMenuEndDraw(id as guiId, w, h)
    x = guiAdjustX(0)
    y = guiAdjustY(0)

    a2SetLineAA 0
    a2Box x, y, x+w-1, y+h-1, THEME_OUTLINE_DARK
    a2SetLineAA 1
endfunction

